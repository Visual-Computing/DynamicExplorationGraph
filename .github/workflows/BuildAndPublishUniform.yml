name: BuildAndPublishUniform

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - feat/cibuildwheel

defaults:
  run:
    working-directory: python

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, macos-13, ubuntu-latest]

    runs-on: ${{ matrix.platform }}
    if: "contains(github.event.head_commit.message, '+publish')"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false

    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Add requirements
      run: python -m pip install --upgrade setuptools pybind11>=2.12.0 cibuildwheel

    - name: Copy Build Files
      run: python3 setup.py copy_build_files

    - name: Build Packages
      run: cibuildwheel --output-dir "dist"
      env:
        CIBW_ARCHS: auto64
        CIBW_BUILD_FRONTEND: "pip; args: --verbose"
        CIBW_ENVIRONMENT: "FORCE_AVX2=1"
        CIBW_ENVIRONMENT_MACOS: "FORCE_AVX2=1 MACOSX_DEPLOYMENT_TARGET=10.15"

    # upload artifacts
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-dists-${{ matrix.platform }}
        path: python/dist


  build_sdist:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '+publish')"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false

    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Add requirements
      run: python -m pip install --upgrade setuptools pybind11>=2.12.0

    - name: Copy Build Files
      run: python3 setup.py copy_build_files

    - name: Build Source Distribution
      run: python setup.py sdist

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-sdist
        path: python/dist


  pypi-publish:
    runs-on: "ubuntu-latest"
    if: "contains(github.event.head_commit.message, '+publish')"

    needs:
      - build
      - build_sdist

    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: testpypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://test.pypi.org/project/deglib/

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: release-dists-*
          merge-multiple: true

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
